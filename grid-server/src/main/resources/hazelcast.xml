<?xml version="1.0" encoding="UTF-8"?>
<hazelcast xmlns="http://www.hazelcast.com/schema/config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.hazelcast.com/schema/config
           http://www.hazelcast.com/schema/config/hazelcast-config-3.11.xsd">

	<group>
		<name>devoxx</name>
	</group>

	<management-center enabled="true">http://localhost:8080/hazelcast-mancenter
	</management-center>

	<network>
		<join>
			<multicast enabled="false" />
			<tcp-ip enabled="true">
				<member-list>
					<member>127.0.0.1:5701</member>
					<member>127.0.0.1:5702</member>
				</member-list>
			</tcp-ip>
		</join>
	</network>

	<!-- When created, the "account" map will use an RDBMS backing store, so
		we don't need memory backups too -->
	<map name="account">
		<backup-count>0</backup-count>
		<map-store enabled="true" initial-mode="EAGER">
			<class-name>neil.demo.devoxx.MyAccountLoader</class-name>
		</map-store>
	</map>

	<!-- Don't bother with config for "jsessionid" map, default is fine -->
	
	<!-- "address" has expiry, don't keep in memory if not used -->
	<map name="address">
		<backup-count>0</backup-count>
		<time-to-live-seconds>30</time-to-live-seconds>
		<max-idle-seconds>30</max-idle-seconds>
		<map-store enabled="true" initial-mode="EAGER">
			<class-name>neil.demo.devoxx.MyAddressLoader</class-name>
		</map-store>
	</map>
	<!-- Same idea as "account" but for "transaction" -->
	<map name="transaction">
		<backup-count>0</backup-count>
		<map-store enabled="true" initial-mode="EAGER">
			<class-name>neil.demo.devoxx.MyTransactionLoader</class-name>
		</map-store>
	</map>
	
	<!-- Force queue full if another microservice isn't consuming -->
	<queue name="disputes">
		<max-size>2</max-size>
	</queue>

	<!-- For objects the server side needs to know about -->
    <serialization>
          <portable-version>1</portable-version>
          <portable-factories>
                <portable-factory factory-id="99">neil.demo.devoxx.MyVersionedPortableFactory</portable-factory>
          </portable-factories>
    </serialization>	
</hazelcast>